First import ``BaseGeometry`` from the ``7-base_geometry`` module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Class should define 2 functions

``area``
    >>> 'area' in dir(BaseGeometry)
    True

``integer_validator``
    >>> 'integer_validator' in dir(BaseGeometry)
    True

    >>> bg = BaseGeometry()
    >>> dir(bg) == dir(BaseGeometry)
    True

Test ``area``
-------------
     >>> try:
    ...     bg.area()
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [Exception] area() is not implemented

Test ``integer_validator``
--------------------------
Integer takes in 2 arguments

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator(1)
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator(1, 2, 3)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

Test for type
    >>> def test_i(tests=[]):
    ...    for test in tests:
    ...        try:
    ...            bg.integer_validator("name", test)
    ...        except Exception as e:
    ...            print("[{}] {} for type {}".format(e.__class__.__name__, e, type(test)))
    ...

    tests = [True, 1.24, -76.87, set(), [1, 2], "a string", {"a":1}, ("11", 3), test_i, bg, BaseGeometry, None]
