Using ``MyList``
-------------------

First import ``MyList`` from the ``1-my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

Now use it:

    >>> l1 = MyList()
    >>> type(l1)
    <class '1-my_list.MyList'>

    >>> print(l1)
    []

This Class inherits from list

    >>> issubclass(MyList, list)
    True

This class only defines one extra function compare to list: print_sorted

    >>> 'print_sorted' in dir(MyList)
    True

    >>> l2 = [3, 7, 0, 1, 6]
    >>> l2.print_sorted()
    Traceback (most recent call last):
    AttributeError: 'list' object has no attribute 'print_sorted'

It is assumed all the elements of the list will be integers.

    >>> def test_i(tests=[]):
    ...    for test in tests:
    ...        try:
    ...            test.print_sorted()
    ...        except Exception as e:
    ...            print("[{}] {}".format(e.__class__.__name__, e))
    ...

    tests = [MyList([1, "a"]), MyList(["a", "b", "c"]), None, MyList([[1], [2]]), MyList([1, -1, 3.4])]
